name: '[RUN] Merge Hive Tests'
on: 
  push:
    branches: 
      - kiln
  workflow_dispatch:
    inputs:
      repo:
        description: 'Docker hub org and repository name'
        required: true
        default: 'nethermindeth/nethermind'
      tag:
        description: 'Tag for the docker image'
        required: true
        default: ''
      dockerfile:
        description: 'Dockerfile to use'
        required: false
        default: 'Dockerfile'
jobs:
  build-dockers:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out Nethermind
        uses: actions/checkout@v2
      - name: Unshallow fetching
        run: git fetch --unshallow
      - name: Settings
        id: settings
        run: |
          echo ::set-output name=TAG::${{ github.event.inputs.tag }}
          echo ::set-output name=dockerfile::${{ github.event.inputs.dockerfile }}
          echo ::set-output name=docker_image::${{ github.event.inputs.repo }}
      - name: Setting up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setting up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Building Nethermind Image
        uses: docker/build-push-action@v2
        with: 
          context: .
          file: ${{ steps.settings.outputs.dockerfile }}
          tags: "${{ steps.settings.outputs.docker_image }}:${{ steps.settings.outputs.TAG }}"
          outputs: type=docker,dest=/tmp/image.tar
      - name: Installing Linux packages
        run: |
         sudo apt-get update
         sudo apt-get install libsnappy-dev libc6-dev libc6 build-essential
      - name: Setup Go environment
        uses: actions/setup-go@v3.0.0
        with:
         go-version: '>=1.17.0'
      - name: Check out Hive
        uses: actions/checkout@v2
        with:
          repository: 'ethereum/hive'
      - name: Build Hive
        run: go build .
      - name: Load Docker Image
        run: docker load --input /tmp/image.tar
      - name: Run Merge Hive
        run: |
         ./hive --client merge-nethermind,merge-nethermind --sim ethereum/engine
      - name: Upload Hive Results
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: workspace/logs/*.json
          retention-days: 7
      - name: Checkout Printer
        uses: actions/checkout@v2
        with: 
          repository: DockBoss/hiveResults
      - name: Set Up Python
        uses: actions/setup-python@v3
      - name: Download Results
        uses: actions/download-artifact@v2
        with:
          name: results
      - name: Print Results
        run: |
         python res.py
